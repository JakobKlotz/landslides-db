"""baseline

Revision ID: 5854ae4edfbb
Revises: 
Create Date: 2025-10-21 13:20:30.418923

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = '5854ae4edfbb'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis")

    # Drop pre-initialized extension (won't be used) and their associated
    # schemas
    op.execute("""
        DROP EXTENSION IF EXISTS postgis_tiger_geocoder CASCADE;
        DROP EXTENSION IF EXISTS postgis_topology CASCADE;
        DROP SCHEMA IF EXISTS tiger CASCADE;
        DROP SCHEMA IF EXISTS tiger_data CASCADE;
        DROP SCHEMA IF EXISTS topology CASCADE;
    """)

    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('classification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('downloaded', sa.Date(), nullable=False),
    sa.Column('modified', sa.Date(), nullable=True),
    sa.Column('license', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('doi', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_table('landslides',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('report', sa.String(), nullable=True),
    sa.Column('report_source', sa.String(), nullable=True),
    sa.Column('report_url', sa.String(), nullable=True),
    sa.Column('geom', Geometry(geometry_type='POINT', srid=32632, dimension=2, spatial_index=False, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('classification_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['classification_id'], ['classification.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['sources.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_geospatial_index('idx_landslides_geom', 'landslides', ['geom'], unique=False, postgresql_using='gist', postgresql_ops={})
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_geospatial_index('idx_landslides_geom', table_name='landslides', postgresql_using='gist', column_name='geom')
    op.drop_geospatial_table('landslides')
    op.drop_table('sources')
    op.drop_table('classification')
    
    op.execute("DROP EXTENSION postgis")
    # ### end Alembic commands ###
